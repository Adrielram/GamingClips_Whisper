#!/usr/bin/env python3
"""
Script simplificado para transcribir videos de gaming con configuraci√≥n optimizada.

Uso:
    python transcribe.py video.mp4
    python transcribe.py path/to/video.mkv
    
El script autom√°ticamente:
- Usa modelo large-v3 para m√°xima calidad
- Configura beam-size 5 para mejor precisi√≥n
- Usa compute-type float16 para velocidad √≥ptima
- Genera archivo .srt con el mismo nombre del video
- Aplica prompt argentino optimizado para gaming
"""

import sys
import os
import subprocess
from pathlib import Path

def main():
    # Cambiar al directorio del script para asegurar rutas correctas
    script_dir = Path(__file__).parent
    os.chdir(script_dir)
    
    # Verificar argumentos
    if len(sys.argv) != 2:
        print("‚ùå Error: Debes especificar el archivo de video a transcribir")
        print()
        print("üìñ Uso:")
        print("    python transcribe.py video.mp4")
        print("    python transcribe.py path/to/video.mkv")
        print()
        print("üéØ El script generar√° autom√°ticamente:")
        print("    - Archivo .srt con el mismo nombre del video")
        print("    - Configuraci√≥n optimizada para gaming argentino")
        print("    - M√°xima calidad de transcripci√≥n")
        sys.exit(1)
    
    video_path = sys.argv[1]
    
    # Convertir a ruta absoluta
    video_path = os.path.abspath(video_path)
    
    # Verificar que el archivo existe
    if not os.path.exists(video_path):
        print(f"‚ùå Error: No se encontr√≥ el archivo '{video_path}'")
        sys.exit(1)
    
    # Generar nombre del archivo de salida (en la misma carpeta que el video)
    video_file = Path(video_path)
    output_path = video_file.with_suffix('.srt')
    
    print("üéÆ Transcriptor de Gaming - Configuraci√≥n Optimizada")
    print("=" * 60)
    print(f"üìπ Video de entrada: {video_path}")
    print(f"üìù Subt√≠tulos de salida: {output_path}")
    print()
    print("‚öôÔ∏è  Configuraci√≥n:")
    print("    ‚Ä¢ Modelo: large-v3 (m√°xima calidad)")
    print("    ‚Ä¢ Beam size: 5 (mejor precisi√≥n)")
    print("    ‚Ä¢ Compute type: float16 (velocidad √≥ptima)")
    print("    ‚Ä¢ Prompt argentino: activado")
    print("    ‚Ä¢ Device: cuda (GPU si est√° disponible)")
    print()
    
    # Construir comando con ruta absoluta al main.py
    main_script = script_dir / "main.py"
    cmd = [
        sys.executable,  # Python actual
        str(main_script),  # Ruta completa a main.py
        video_path,
        "--model-size", "large-v3",
        "--beam-size", "5",
        "--compute-type", "float16",
        "--output", str(output_path),
        "--use-argentine-prompt",
        "--vad-split"  # Agregar divisi√≥n por detecci√≥n de silencio
    ]
    
    print("üöÄ Iniciando transcripci√≥n...")
    print("‚è≥ Esto puede tomar varios minutos dependiendo del video...")
    print()
    
    try:
        # Ejecutar el comando
        result = subprocess.run(cmd, check=True)
        
        print()
        print("‚úÖ ¬°Transcripci√≥n completada exitosamente!")
        print(f"üìÅ Archivo generado: {output_path}")
        
        # Verificar que el archivo se cre√≥
        if output_path.exists():
            file_size = output_path.stat().st_size
            print(f"üìä Tama√±o del archivo: {file_size} bytes")
        
        print()
        print("üéØ Consejos:")
        print("    ‚Ä¢ Revisa el archivo .srt para verificar la calidad")
        print("    ‚Ä¢ Si hay errores, usa tools/postprocess_subs.py para limpiar")
        print("    ‚Ä¢ Para evaluar calidad: tools/evaluate_wer.py")
        
    except subprocess.CalledProcessError as e:
        print()
        print("‚ùå Error durante la transcripci√≥n:")
        print(f"    C√≥digo de error: {e.returncode}")
        print()
        print("üîß Posibles soluciones:")
        print("    ‚Ä¢ Verificar que el video no est√© corrupto")
        print("    ‚Ä¢ Probar con --device cpu si hay problemas de GPU")
        print("    ‚Ä¢ Revisar que FFmpeg est√© instalado")
        print("    ‚Ä¢ Verificar espacio en disco disponible")
        sys.exit(1)
    
    except KeyboardInterrupt:
        print()
        print("‚èπÔ∏è  Transcripci√≥n cancelada por el usuario")
        sys.exit(1)
    
    except Exception as e:
        print()
        print(f"‚ùå Error inesperado: {e}")
        print()
        print("üîß Intenta ejecutar manualmente:")
        print(f"    python main.py {video_path} --output {output_path}")
        sys.exit(1)

if __name__ == "__main__":
    main()